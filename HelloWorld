public static async Task WriteJsonAsync(string outputFilePath, JsonDocument jsonDocument)
{
    using var fileStream = new FileStream(outputFilePath, FileMode.Create, FileAccess.Write, FileShare.None);
    await WriteJsonAsync(fileStream, jsonDocument);
}

public static async Task WriteJsonAsync(Stream outputStream, JsonDocument jsonDocument)
{
    var dynamicObject = ConvertJsonDocumentToDynamic(jsonDocument);
    await WriteJsonAsync(outputStream, dynamicObject);
}

private static async Task WriteJsonAsync(TextWriter writer, dynamic obj)
{
    var options = new JsonSerializerOptions { WriteIndented = true };
    var jsonString = JsonSerializer.Serialize(obj, options);
    await writer.WriteAsync(jsonString);
}

private static async Task WriteJsonAsync(Stream outputStream, dynamic obj)
{
    using var writer = new StreamWriter(outputStream, leaveOpen: true);
    await WriteJsonAsync(writer, obj);
}

private static dynamic ConvertJsonDocumentToDynamic(JsonDocument jsonDocument)
{
    using var stream = new MemoryStream();
    using var writer = new Utf8JsonWriter(stream);
    jsonDocument.WriteTo(writer);
    writer.Flush();
    stream.Position = 0;
    using var reader = new StreamReader(stream);
    var jsonString = reader.ReadToEnd();
    return JsonSerializer.Deserialize<dynamic>(jsonString);
}
