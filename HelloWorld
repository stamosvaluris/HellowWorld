public static async Task Main(string[] args)
{
    var config = Configuration.Load();

    // Extract values from JSON
    var jsonHelper = new JsonHelper();
    var values = await jsonHelper.ExtractValuesByKeyAsync(staticData, config.KeyToExtract);

    // Extract files from ZIP
    var tempPath = PathHelper.GetTempFolderPath();
    var extractedFiles = ZipHelper.ExtractLastImportedZipFile(tempPath);

    // Open CSV file streams
    using var inputStream = new FileStream(extractedFiles[0], FileMode.Open, FileAccess.Read);
    using var memoryStream1 = new MemoryStream();
    using var memoryStream2 = new MemoryStream();
    using var memoryStream3 = new MemoryStream();
    using var memoryStream4 = new MemoryStream();
    using var memoryStream5 = new MemoryStream();

    // Filter and transform CSV data
    var filteredRecordsStream = await FileOperations.CsvHelper.FilterCsvAsync(inputStream, config.Criteria);
    await FileOperations.CsvHelper.WriteCsvAsync(memoryStream1, filteredRecordsStream);
    memoryStream1.Position = 0;

    var filteredColumnsStream = await FileOperations.CsvHelper.KeepOnlyColumnsAsync(memoryStream1, config.CsvColumnsToKeep);
    await FileOperations.CsvHelper.WriteCsvAsync(memoryStream2, filteredColumnsStream);
    memoryStream2.Position = 0;

    var finalFilteredRecordsStream = await FileOperations.CsvHelper.FilterByColumnValues(memoryStream2, config.MarkitDataComparisonCol, cpStaticDataComparisonKeys);
    await FileOperations.CsvHelper.WriteCsvAsync(memoryStream3, finalFilteredRecordsStream);
    memoryStream3.Position = 0;

    // Convert CSV to JSON
    var csvToJson = await Converters.CsvToJsonAsync(memoryStream3);
    var slicedJson = await jsonHelper.KeepOnlyKeysAsync(memoryStream4, config.JsonKeysToKeep);
    memoryStream4.Position = 0;

    var multipliedJson = await jsonHelper.MultiplyKeyByValueAsync(memoryStream4, config.Multiplicant, config.Multiplier);

    // Write JSON output
    var outputPathStream = Path.Combine(tempPath, "output_streamed.json");
    using var outputStream = new FileStream(outputPathStream, FileMode.Create, FileAccess.Write);
    await JsonHelper.WriteJsonAsync(outputStream, multipliedJson);
}
