using System;
using System.Collections.Generic;
using System.IO;
using Helpers;
using FileOperations;

namespace CdsClient
{
    public static class Program
    {
        public static void Main(string[] args)
        {
            Configuration config = Configuration.Load();
            SftpClient client = new SftpClient();
            client.Connect(config.Host, config.Port, config.Username, config.Password);
            client.ChangeDirectory(config.Files);
            PathHelper.GetTempFolderPath();
            Console.WriteLine(PathHelper.GetTempFolderPath());
            client.GetLastUploadedZipFile(PathHelper.GetTempFolderPath());
            List<string> extractedFiles = ZipHelper.ExtractLastImportedZipFile(PathHelper.GetTempFolderPath());

            List<string> keepOnly = new List<string> 
            { 
                "Date", "ShortName", "Tier", "PrimaryCurve", "PrimaryCoupon", "Tenor", "ParSpread"
            };

            // Keep only specified columns
            var filteredColumns = FileOperations.CsvHelper.KeepOnlyColumns(extractedFiles[0], keepOnly);

            // Save filtered columns to a new CSV file
            string outputFilePath = "C:\\Users\\\\source\\repos\\CDS Client\\Temp\\output_filtered.csv";
            FileOperations.CsvHelper.WriteCsv(outputFilePath, filteredColumns);

            // Apply filter criteria
            var criteria = new Dictionary<string, string>
            {
                
            };

            var filteredRecords = FileOperations.CsvHelper.FilterCsv(outputFilePath, criteria);

            // Save the final filtered CSV file
            string finalOutputPath = "C:\\Users\\SYSdadmin\\source\\repos\\CDS Client\\Temp\\output.csv";
            FileOperations.CsvHelper.WriteCsv(finalOutputPath, filteredRecords);

            // Example using streams
            string outputPath = "C:\\Users\\\\source\\repos\\CDS Client\\Temp\\output_2.csv";
            using (var inputStream = new FileStream(extractedFiles[0], FileMode.Open, FileAccess.Read))
            using (var outputStream = new FileStream(outputPath, FileMode.Create))
            {
                var filteredColumnsStream = FileOperations.CsvHelper.KeepOnlyColumns(inputStream, keepOnly);
                var filteredRecordsStream = FileOperations.CsvHelper.FilterCsv(inputStream, criteria);
                FileOperations.CsvHelper.WriteCsv(outputStream, filteredRecordsStream);
            }

            client.Disconnect();
        }
    }
}
