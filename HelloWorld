public static async Task<JsonDocument> MultiplyKeyByValueAsync(JsonDocument inputJson, string key, double multiplier)
{
    using var stream = new MemoryStream();
    using var writer = new Utf8JsonWriter(stream);

    if (inputJson.RootElement.ValueKind == JsonValueKind.Object)
    {
        writer.WriteStartObject();
        foreach (var property in inputJson.RootElement.EnumerateObject())
        {
            if (property.Name == key && property.Value.ValueKind == JsonValueKind.Number)
            {
                writer.WritePropertyName(property.Name);
                writer.WriteNumberValue(property.Value.GetDouble() * multiplier);
            }
            else if (property.Name == key && property.Value.ValueKind == JsonValueKind.String && 
                     double.TryParse(property.Value.GetString(), out double value))
            {
                writer.WritePropertyName(property.Name);
                writer.WriteNumberValue(value * multiplier);
            }
            else
            {
                property.WriteTo(writer);
            }
        }
        writer.WriteEndObject();
    }
    else if (inputJson.RootElement.ValueKind == JsonValueKind.Array)
    {
        writer.WriteStartArray();
        foreach (var element in inputJson.RootElement.EnumerateArray())
        {
            if (element.ValueKind == JsonValueKind.Object)
            {
                writer.WriteStartObject();
                foreach (var property in element.EnumerateObject())
                {
                    if (property.Name == key && property.Value.ValueKind == JsonValueKind.Number)
                    {
                        writer.WritePropertyName(property.Name);
                        writer.WriteNumberValue(property.Value.GetDouble() * multiplier);
                    }
                    else if (property.Name == key && property.Value.ValueKind == JsonValueKind.String && 
                             double.TryParse(property.Value.GetString(), out double value))
                    {
                        writer.WritePropertyName(property.Name);
                        writer.WriteNumberValue(value * multiplier);
                    }
                    else
                    {
                        property.WriteTo(writer);
                    }
                }
                writer.WriteEndObject();
            }
            else
            {
                element.WriteTo(writer);
            }
        }
        writer.WriteEndArray();
    }

    await writer.FlushAsync();
    stream.Position = 0;
    return await JsonDocument.ParseAsync(stream);
}
