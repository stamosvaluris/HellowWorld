public static async Task<JsonDocument> MultiplyKeyByValueAsync(JsonDocument inputJson, string key, double multiplier)
{
    using (var stream = new MemoryStream())
    using (var writer = new Utf8JsonWriter(stream, new JsonWriterOptions { Indented = true }))
    {
        writer.WriteStartArray();

        foreach (var element in inputJson.RootElement.EnumerateArray())
        {
            writer.WriteStartObject();

            foreach (var property in element.EnumerateObject())
            {
                writer.WritePropertyName(property.Name);

                if (property.Name == key && (property.Value.ValueKind == JsonValueKind.Number || 
                                             (property.Value.ValueKind == JsonValueKind.String && double.TryParse(property.Value.GetString(), out double parsedValue))))
                {
                    var value = property.Value.ValueKind == JsonValueKind.Number 
                                ? property.Value.GetDouble() 
                                : double.Parse(property.Value.GetString());

                    writer.WriteNumberValue(value * multiplier);
                }
                else
                {
                    property.Value.WriteTo(writer);
                }
            }

            writer.WriteEndObject();
        }

        writer.WriteEndArray();

        await writer.FlushAsync();
        stream.Position = 0;
        return await JsonDocument.ParseAsync(stream);
    }
}
