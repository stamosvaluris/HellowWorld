public static async Task<IEnumerable<dynamic>> FilterCsvAsync(Stream csvStream, Dictionary<string, string> criteria)
{
    var config = new CsvConfiguration(CultureInfo.InvariantCulture)
    {
        IgnoreBlankLines = true,
        BadDataFound = context => Console.WriteLine($"Bad data found at row {context.RawRecord}"),
        MissingFieldFound = null
    };

    using var reader = new StreamReader(csvStream);
    using var csvReader = new CsvReader(reader, config);

    var records = await csvReader.GetRecordsAsync<dynamic>().ToListAsync();
    var filteredRecords = new List<dynamic>();

    foreach (var record in records)
    {
        var recordDict = record as IDictionary<string, object>;
        if (recordDict == null) continue;

        bool recordMatches = criteria.All(c => recordDict.ContainsKey(c.Key) && recordDict[c.Key]?.ToString() == c.Value);
        if (recordMatches)
        {
            filteredRecords.Add(record);
        }
    }

    return filteredRecords;
}
