public static async Task<JsonDocument> MultiplyKeyByValueAsync(JsonDocument inputJson, string key, double multiplier)
{
    var jsonElement = inputJson.RootElement;
    var modifiedJson = new List<Dictionary<string, object>>();

    foreach (var element in jsonElement.EnumerateArray())
    {
        var record = new Dictionary<string, object>();

        foreach (var property in element.EnumerateObject())
        {
            if (property.Name == key)
            {
                Console.WriteLine($"Found key: {property.Name}");

                double value;
                if (property.Value.ValueKind == JsonValueKind.Number)
                {
                    value = property.Value.GetDouble();
                }
                else if (property.Value.ValueKind == JsonValueKind.String && double.TryParse(property.Value.GetString(), out double parsedValue))
                {
                    value = parsedValue;
                }
                else
                {
                    Console.WriteLine($"Skipping key {property.Name} as its value is not a number or a numeric string. Type: {property.Value.ValueKind}");
                    record[property.Name] = property.Value;
                    continue;
                }

                Console.WriteLine($"property.Name: {property.Name}");
                Console.WriteLine($"value: {value}");
                Console.WriteLine($"multiplier: {multiplier}");
                Console.WriteLine($"product: {value * multiplier}");

                record[property.Name] = value * multiplier;
            }
            else
            {
                record[property.Name] = property.Value;
            }
        }

        modifiedJson.Add(record);
    }

    var jsonString = JsonSerializer.Serialize(modifiedJson, new JsonSerializerOptions { WriteIndented = true });
    var jsonDocument = JsonDocument.Parse(jsonString);

    return jsonDocument;
}
