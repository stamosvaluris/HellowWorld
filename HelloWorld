using System;
using System.IO;
using System.Security.Cryptography;

public class Encryption
{
    public byte[] EncryptFile(string filePath, byte[] key)
    {
        using (Aes aes = Aes.Create())
        {
            aes.Key = key;
            aes.GenerateIV();
            byte[] iv = aes.IV;
            byte[] encrypted;

            using (FileStream fs = new FileStream(filePath, FileMode.Open, FileAccess.Read))
            using (MemoryStream ms = new MemoryStream())
            {
                ms.Write(iv, 0, iv.Length);
                using (CryptoStream cs = new CryptoStream(ms, aes.CreateEncryptor(), CryptoStreamMode.Write))
                {
                    fs.CopyTo(cs);
                }
                encrypted = ms.ToArray();
            }

            return encrypted;
        }
    }

    public byte[] GenerateKey()
    {
        using (Aes aes = Aes.Create())
        {
            aes.GenerateKey();
            return aes.Key;
        }
    }
}


using System;
using System.IO;
using System.Security.Cryptography;

public class Decryption
{
    public byte[] DecryptFile(string encryptedFilePath, byte[] key)
    {
        using (Aes aes = Aes.Create())
        {
            aes.Key = key;
            byte[] iv = new byte[aes.BlockSize / 8];
            byte[] decrypted;

            using (FileStream fs = new FileStream(encryptedFilePath, FileMode.Open, FileAccess.Read))
            {
                fs.Read(iv, 0, iv.Length);

                using (MemoryStream ms = new MemoryStream())
                using (CryptoStream cs = new CryptoStream(ms, aes.CreateDecryptor(aes.Key, iv), CryptoStreamMode.Write))
                {
                    fs.CopyTo(cs);
                    cs.FlushFinalBlock();
                    decrypted = ms.ToArray();
                }
            }

            return decrypted;
        }
    }
}



using System;
using System.IO;

class Program
{
    static void Main()
    {
        string filePath = "credentials.json";
        string encryptedFilePath = "encrypted_credentials.json";
        string decryptedFilePath = "decrypted_credentials.json";
        string keyPath = "secret.key";

        var encryption = new Encryption();
        var decryption = new Decryption();

        // Generate a key and save it
        byte[] key = encryption.GenerateKey();
        File.WriteAllBytes(keyPath, key);

        // Encrypt the file
        byte[] encrypted = encryption.EncryptFile(filePath, key);
        File.WriteAllBytes(encryptedFilePath, encrypted);

        // Read the key back
        byte[] savedKey = File.ReadAllBytes(keyPath);

        // Decrypt the file
        byte[] decrypted = decryption.DecryptFile(encryptedFilePath, savedKey);
        File.WriteAllBytes(decryptedFilePath, decrypted);
    }
}
