public static async Task<JsonDocument> KeepOnlyKeysAsync(JsonDocument inputJson, List<string> keysToKeep)
{
    using (var stream = new MemoryStream())
    using (var writer = new Utf8JsonWriter(stream))
    {
        if (inputJson.RootElement.ValueKind == JsonValueKind.Object)
        {
            writer.WriteStartObject();
            foreach (var property in inputJson.RootElement.EnumerateObject())
            {
                if (keysToKeep.Contains(property.Name))
                {
                    property.WriteTo(writer);
                }
            }
            writer.WriteEndObject();
        }
        else if (inputJson.RootElement.ValueKind == JsonValueKind.Array)
        {
            writer.WriteStartArray();
            foreach (var element in inputJson.RootElement.EnumerateArray())
            {
                if (element.ValueKind == JsonValueKind.Object)
                {
                    writer.WriteStartObject();
                    foreach (var property in element.EnumerateObject())
                    {
                        if (keysToKeep.Contains(property.Name))
                        {
                            property.WriteTo(writer);
                        }
                    }
                    writer.WriteEndObject();
                }
                else
                {
                    // If the element is not an object, write it as is
                    element.WriteTo(writer);
                }
            }
            writer.WriteEndArray();
        }
        await writer.FlushAsync();
        stream.Position = 0;
        return await JsonDocument.ParseAsync(stream);
    }
}
