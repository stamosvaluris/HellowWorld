using System;
using System.IO;
using System.Security.Cryptography;

public class Encryption
{
    public void GenerateAndSaveKeyAndIV(string keyPath, string ivPath)
    {
        using (Aes aes = Aes.Create())
        {
            aes.GenerateKey();
            File.WriteAllBytes(keyPath, aes.Key);

            aes.GenerateIV();
            File.WriteAllBytes(ivPath, aes.IV);

            Console.WriteLine("AES Key and IV have been generated and saved.");
        }
    }

    public byte[] EncryptFile(string filePath, byte[] key, byte[] iv)
    {
        using (Aes aes = Aes.Create())
        {
            aes.Key = key;
            aes.IV = iv;
            byte[] encrypted;

            using (FileStream fs = new FileStream(filePath, FileMode.Open, FileAccess.Read))
            using (MemoryStream ms = new MemoryStream())
            {
                using (CryptoStream cs = new CryptoStream(ms, aes.CreateEncryptor(), CryptoStreamMode.Write))
                {
                    fs.CopyTo(cs);
                }
                encrypted = ms.ToArray();
            }

            return encrypted;
        }
    }
}


using System;
using System.IO;
using System.Security.Cryptography;

public class Decryption
{
    public byte[] DecryptFile(string encryptedFilePath, byte[] key, byte[] iv)
    {
        using (Aes aes = Aes.Create())
        {
            aes.Key = key;
            aes.IV = iv;
            byte[] decrypted;

            using (FileStream fs = new FileStream(encryptedFilePath, FileMode.Open, FileAccess.Read))
            using (MemoryStream ms = new MemoryStream())
            using (CryptoStream cs = new CryptoStream(ms, aes.CreateDecryptor(), CryptoStreamMode.Write))
            {
                fs.CopyTo(cs);
                cs.FlushFinalBlock();
                decrypted = ms.ToArray();
            }

            return decrypted;
        }
    }
}


using System;
using System.IO;

class Program
{
    static void Main()
    {
        string filePath = "credentials.json";
        string encryptedFilePath = "encrypted_credentials.json";
        string decryptedFilePath = "decrypted_credentials.json";
        string keyPath = "aesKey.key";
        string ivPath = "aesIV.iv";

        var encryption = new Encryption();
        var decryption = new Decryption();

        // Generate and save key and IV
        encryption.GenerateAndSaveKeyAndIV(keyPath, ivPath);

        // Load the key and IV from files
        byte[] key = File.ReadAllBytes(keyPath);
        byte[] iv = File.ReadAllBytes(ivPath);

        // Encrypt the file
        byte[] encrypted = encryption.EncryptFile(filePath, key, iv);
        File.WriteAllBytes(encryptedFilePath, encrypted);

        // Decrypt the file
        byte[] decrypted = decryption.DecryptFile(encryptedFilePath, key, iv);
        File.WriteAllBytes(decryptedFilePath, decrypted);
    }
}
