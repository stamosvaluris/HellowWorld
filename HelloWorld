public List<string> ExtractValuesByKey(JsonDocument jsonDocument, string key)
{
    var values = new List<string>();
    ExtractValuesByKeyRecursive(jsonDocument.RootElement, key, values);
    return values;
}

private void ExtractValuesByKeyRecursive(JsonElement element, string key, List<string> values)
{
    if (element.ValueKind == JsonValueKind.Object)
    {
        foreach (var property in element.EnumerateObject())
        {
            if (property.NameEquals(key))
            {
                values.Add(property.Value.ToString());
            }
            else if (property.Value.ValueKind == JsonValueKind.Object || property.Value.ValueKind == JsonValueKind.Array)
            {
                ExtractValuesByKeyRecursive(property.Value, key, values);
            }
        }
    }
    else if (element.ValueKind == JsonValueKind.Array)
    {
        foreach (var item in element.EnumerateArray())
        {
            if (item.ValueKind == JsonValueKind.Object || item.ValueKind == JsonValueKind.Array)
            {
                ExtractValuesByKeyRecursive(item, key, values);
            }
        }
    }
}
